var _jsxFileName = "/Users/sacameron/Sites/dd-breakpoint-container/src/components/Breakpoint.js";
import React from 'react';
import T from 'prop-types';
import { resolveBp } from '../data/breakpoints.js';
import { BP_CONTEXTS, ID_DEFAULT } from './Context.js';

var Breakpoint = function Breakpoint(_ref) {
  var q = _ref.q,
      query = _ref.query,
      identifier = _ref.identifier,
      children = _ref.children;
  var bpQuery = q || query; // Aggregate query shorthand

  var Context = BP_CONTEXTS[identifier];
  return React.createElement(Context.Consumer, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 12
    },
    __self: this
  }, function (bp) {
    return resolveBp(bpQuery, bp) && children;
  });
};

Breakpoint.propTypes = {
  query: T.oneOfType([T.string, T.number]),
  q: T.oneOfType([T.string, T.number]),
  identifier: T.string.isRequired,
  children: T.node.isRequired
};
Breakpoint.defaultProps = {
  query: 0,
  q: null,
  // 'query' shorthand
  identifier: ID_DEFAULT
};
export default Breakpoint;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL0JyZWFrcG9pbnQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJUIiwicmVzb2x2ZUJwIiwiQlBfQ09OVEVYVFMiLCJJRF9ERUZBVUxUIiwiQnJlYWtwb2ludCIsInEiLCJxdWVyeSIsImlkZW50aWZpZXIiLCJjaGlsZHJlbiIsImJwUXVlcnkiLCJDb250ZXh0IiwiYnAiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJudW1iZXIiLCJpc1JlcXVpcmVkIiwibm9kZSIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxDQUFQLE1BQWMsWUFBZDtBQUVBLFNBQVNDLFNBQVQsUUFBMEIsd0JBQTFCO0FBQ0EsU0FBU0MsV0FBVCxFQUFzQkMsVUFBdEIsUUFBd0MsY0FBeEM7O0FBRUEsSUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsT0FBd0M7QUFBQSxNQUFyQ0MsQ0FBcUMsUUFBckNBLENBQXFDO0FBQUEsTUFBbENDLEtBQWtDLFFBQWxDQSxLQUFrQztBQUFBLE1BQTNCQyxVQUEyQixRQUEzQkEsVUFBMkI7QUFBQSxNQUFmQyxRQUFlLFFBQWZBLFFBQWU7QUFDMUQsTUFBTUMsT0FBTyxHQUFHSixDQUFDLElBQUlDLEtBQXJCLENBRDBELENBQzlCOztBQUM1QixNQUFNSSxPQUFPLEdBQUdSLFdBQVcsQ0FBQ0ssVUFBRCxDQUEzQjtBQUVBLFNBQ0Msb0JBQUMsT0FBRCxDQUFTLFFBQVQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FFRSxVQUFBSSxFQUFFO0FBQUEsV0FBSVYsU0FBUyxDQUFDUSxPQUFELEVBQVVFLEVBQVYsQ0FBVCxJQUEwQkgsUUFBOUI7QUFBQSxHQUZKLENBREQ7QUFNQSxDQVZEOztBQVlBSixVQUFVLENBQUNRLFNBQVgsR0FBdUI7QUFDdEJOLEVBQUFBLEtBQUssRUFBRU4sQ0FBQyxDQUFDYSxTQUFGLENBQVksQ0FBQ2IsQ0FBQyxDQUFDYyxNQUFILEVBQVdkLENBQUMsQ0FBQ2UsTUFBYixDQUFaLENBRGU7QUFFdEJWLEVBQUFBLENBQUMsRUFBRUwsQ0FBQyxDQUFDYSxTQUFGLENBQVksQ0FBQ2IsQ0FBQyxDQUFDYyxNQUFILEVBQVdkLENBQUMsQ0FBQ2UsTUFBYixDQUFaLENBRm1CO0FBR3RCUixFQUFBQSxVQUFVLEVBQUVQLENBQUMsQ0FBQ2MsTUFBRixDQUFTRSxVQUhDO0FBSXRCUixFQUFBQSxRQUFRLEVBQUVSLENBQUMsQ0FBQ2lCLElBQUYsQ0FBT0Q7QUFKSyxDQUF2QjtBQU9BWixVQUFVLENBQUNjLFlBQVgsR0FBMEI7QUFDekJaLEVBQUFBLEtBQUssRUFBRSxDQURrQjtBQUV6QkQsRUFBQUEsQ0FBQyxFQUFFLElBRnNCO0FBRWhCO0FBQ1RFLEVBQUFBLFVBQVUsRUFBRUo7QUFIYSxDQUExQjtBQU1BLGVBQWVDLFVBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFQgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7IHJlc29sdmVCcCB9IGZyb20gJy4uL2RhdGEvYnJlYWtwb2ludHMuanMnO1xuaW1wb3J0IHsgQlBfQ09OVEVYVFMsIElEX0RFRkFVTFQgfSBmcm9tICcuL0NvbnRleHQuanMnO1xuXG5jb25zdCBCcmVha3BvaW50ID0gKHsgcSwgcXVlcnksIGlkZW50aWZpZXIsIGNoaWxkcmVuIH0pID0+IHtcblx0Y29uc3QgYnBRdWVyeSA9IHEgfHwgcXVlcnk7IC8vIEFnZ3JlZ2F0ZSBxdWVyeSBzaG9ydGhhbmRcblx0Y29uc3QgQ29udGV4dCA9IEJQX0NPTlRFWFRTW2lkZW50aWZpZXJdO1xuXG5cdHJldHVybiAoXG5cdFx0PENvbnRleHQuQ29uc3VtZXI+XG5cdFx0XHR7LyogUmVuZGVyIGNoaWxkcmVuIG9ubHkgaWYgYnJlYWtwb2ludCBxdWVyeSByZXNvbHZlcyAqL31cblx0XHRcdHticCA9PiByZXNvbHZlQnAoYnBRdWVyeSwgYnApICYmIGNoaWxkcmVufVxuXHRcdDwvQ29udGV4dC5Db25zdW1lcj5cblx0KTtcbn07XG5cbkJyZWFrcG9pbnQucHJvcFR5cGVzID0ge1xuXHRxdWVyeTogVC5vbmVPZlR5cGUoW1Quc3RyaW5nLCBULm51bWJlcl0pLFxuXHRxOiBULm9uZU9mVHlwZShbVC5zdHJpbmcsIFQubnVtYmVyXSksXG5cdGlkZW50aWZpZXI6IFQuc3RyaW5nLmlzUmVxdWlyZWQsXG5cdGNoaWxkcmVuOiBULm5vZGUuaXNSZXF1aXJlZCxcbn07XG5cbkJyZWFrcG9pbnQuZGVmYXVsdFByb3BzID0ge1xuXHRxdWVyeTogMCxcblx0cTogbnVsbCwgLy8gJ3F1ZXJ5JyBzaG9ydGhhbmRcblx0aWRlbnRpZmllcjogSURfREVGQVVMVCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJyZWFrcG9pbnQ7XG4iXX0=